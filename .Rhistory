parampd<-pgls_models_list5[e][[1]]$model$coef[1]+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial")$Head.mass..g.)*
(pgls_models_list5[e][[1]]$model$coef[2])
paramsf<-(pgls_models_list5[e][[1]]$model$coef[1]+pgls_models_list5[e][[1]]$model$coef[4])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface")$Head.mass..g.)*
(pgls_models_list5[e][[1]]$model$coef[2]+pgls_models_list5[e][[1]]$model$coef[7])
paramsT<-(pgls_models_list5[e][[1]]$model$coef[1]+pgls_models_list5[e][[1]]$model$coef[5])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit")$Head.mass..g.)*
(pgls_models_list5[e][[1]]$model$coef[2]+pgls_models_list5[e][[1]]$model$coef[8])
paramsplg<-(pgls_models_list5[e][[1]]$model$coef[1]+pgls_models_list5[e][[1]]$model$coef[3])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging")$Head.mass..g.)*
(pgls_models_list5[e][[1]]$model$coef[2]+pgls_models_list5[e][[1]]$model$coef[6])
p<-ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = log(Head.mass..g.), y = log(earmeasureval), label = Binomial),
factor = as.factor(plungedistinct))+
theme_classic()+
theme(legend.position = "none")+
geom_point(aes(color = plungedistinct))+
scale_color_manual(values=c("green","black","darkgrey","blue","green","darkgray","darkgreen","corns2lk4","blue"))+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial"),
aes(x = log(Head.mass..g.),y = parampd), col = "green")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface"),
aes(x = log(Head.mass..g.),
y = paramsf), col = "darkgrey")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit"),
aes(x = log(Head.mass..g.),y = paramsT), col = "blue")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging"),
aes(x = log(Head.mass..g.),y = paramsplg), col = "black")+
#scale_x_log10()+
#scale_y_log10()+
#geom_text_repel(aes(label = Orderpdonly))+
ylab(paste0("log(",yvarnames[e],")"))
p
#ggExtra::ggMarginal(p, type = "boxplot", groupColour = TRUE, margins = "y")#add marginal plot to 'p' object
}
runplot_plungedistinct_int(1
)
yvarnames
runplot_plungedistinct_int(3)
runplot_plungedistinct_int(11)
runplot_plungedistinct_int(3)
runplot_plungedistinct_int(11)
exp(-0.72)
exp(-0.92)
exp(-0.33)
exp(-0.5)
exp(-0.56)
exp(-2.7)
yvarnames
runplot_plungedistinct_main(10)#air
runplot_category_main(8)#RW
runplot_category_main(10)
runplot_plungedistinct_main(10)#air
runplot_plungedistinct_main<-function(e){
parampd<-pgls_models_list4[e][[1]]$model$coef[1]+#intercept
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramsf<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[3])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramsT<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[4])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramslast<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[5])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
p<-ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = log(Head.mass..g.), y = log(earmeasureval), label = Binomial),
factor = as.factor(plungedistinct))+
theme_classic()+
geom_encircle()
theme(legend.position = "none")+
geom_point(aes(color = plungedistinct))+
scale_color_manual(values=c("green","black","darkgrey","blue","green","darkgray","darkgreen","corns2lk4","blue"))+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial"),
aes(x = log(Head.mass..g.),y = parampd), col = "green")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging"),
aes(x = log(Head.mass..g.),y = paramsf), col = "black")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface"),
aes(x = log(Head.mass..g.),y = paramsT), col = "darkgrey")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit"),
aes(x = log(Head.mass..g.),y = paramslast), col = "blue")+
#geom_text_repel(aes(label = Orderpdonly))+
ylab(paste0("log(",yvarnames[e],")"))
p
#ggExtra::ggMarginal(p, type = "boxplot", groupColour = TRUE, margins = "y")#add marginal plot to 'p' object
}
runplot_plungedistinct_main(4)#col of
modellist<- paste(pgls_todo_hm,"+plungedistinct")
pgls_models_list4<-lapply(modellist,pgls_models)#run pgls
runplot_plungedistinct_main(10)#air
runplot_plungedistinct_main(4)#col offset
ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = log(Head.mass..g.), y = log(earmeasureval), label = Binomial),
factor = as.factor(plungedistinct))+
theme_classic()+
geom_encircle()
theme(legend.position = "none")
runplot_plungedistinct_main<-function(e){
parampd<-pgls_models_list4[e][[1]]$model$coef[1]+#intercept
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramsf<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[3])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramsT<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[4])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramslast<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[5])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
p<-ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = log(Head.mass..g.), y = log(earmeasureval), label = Binomial),
factor = as.factor(plungedistinct))+
theme_classic()+
geom_encircle()+
theme(legend.position = "none")+
geom_point(aes(color = plungedistinct))+
scale_color_manual(values=c("green","black","darkgrey","blue","green","darkgray","darkgreen","corns2lk4","blue"))+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial"),
aes(x = log(Head.mass..g.),y = parampd), col = "green")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging"),
aes(x = log(Head.mass..g.),y = paramsf), col = "black")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface"),
aes(x = log(Head.mass..g.),y = paramsT), col = "darkgrey")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit"),
aes(x = log(Head.mass..g.),y = paramslast), col = "blue")+
#geom_text_repel(aes(label = Orderpdonly))+
ylab(paste0("log(",yvarnames[e],")"))
p
#ggExtra::ggMarginal(p, type = "boxplot", groupColour = TRUE, margins = "y")#add marginal plot to 'p' object
}
runplot_plungedistinct_main(4)#c
runplot_plungedistinct_main<-function(e){
parampd<-pgls_models_list4[e][[1]]$model$coef[1]+#intercept
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramsf<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[3])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramsT<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[4])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
paramslast<-(pgls_models_list4[e][[1]]$model$coef[1]+pgls_models_list4[e][[1]]$model$coef[5])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit")$Head.mass..g.)*#heamass times slope
(pgls_models_list4[e][[1]]$model$coef[2])
p<-ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = log(Head.mass..g.), y = log(earmeasureval), label = Binomial),
factor = as.factor(plungedistinct))+
theme_classic()+
#geom_encircle()+
theme(legend.position = "none")+
geom_point(aes(color = plungedistinct))+
scale_color_manual(values=c("green","black","darkgrey","blue","green","darkgray","darkgreen","corns2lk4","blue"))+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Terrestrial"),
aes(x = log(Head.mass..g.),y = parampd), col = "green")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Plunging"),
aes(x = log(Head.mass..g.),y = paramsf), col = "black")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Surface"),
aes(x = log(Head.mass..g.),y = paramsT), col = "darkgrey")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]&longdfplotting$plungedistinct=="Underwater pursuit"),
aes(x = log(Head.mass..g.),y = paramslast), col = "blue")+
#geom_text_repel(aes(label = Orderpdonly))+
ylab(paste0("log(",yvarnames[e],")"))
p
#ggExtra::ggMarginal(p, type = "boxplot", groupColour = TRUE, margins = "y")#add marginal plot to 'p' object
}
runplot_plungedistinct_main(4)#col offset
runplot_plungedistinct_main(5)#umbo height
runplot_plungedistinct_main(7)#Ec length
runplot_plungedistinct_main(10)#air
runplot_category_main(1)
runplot_category_main(11)
runplot_category_main(13)
runplot_category_main(10)
runplot_category_main<-function(e){
parampd<-pgls_models_list2[e][[1]]$model$coef[1]+#intercept
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
paramsf<-(pgls_models_list2[e][[1]]$model$coef[1]+pgls_models_list2[e][[1]]$model$coef[3])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
paramsT<-(pgls_models_list2[e][[1]]$model$coef[1]+pgls_models_list2[e][[1]]$model$coef[4])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
p<-ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g., y = earmeasureval, label = Binomial),
factor = as.factor(Category))+
theme_classic()+
theme(legend.position = "none")+
geom_point(aes(color = Category))+
scale_color_manual(values=c("green","blue","darkgrey","l2ghtblue","green","darkgray","darkgreen","corns2lk4","blue"))+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(parampd)), col = "green")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(paramsf)), col = "blue")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(paramsT)), col = "darkgrey")+
scale_x_log10()+
scale_y_log10()+annotation_logticks(sides = "lr")
geom_text_repel(aes(label = Orderpdonly))+
ylab(yvarnames[e])
ggExtra::ggMarginal(p, type = "boxplot", groupColour = TRUE, margins = "y")#add marginal plot to 'p' object
}
runplot_category_main(1)+annotation_logticks(sides = "lr")
runplot_category_main(10)
runplot_category_main(1)
runplot_category_main<-function(e){
parampd<-pgls_models_list2[e][[1]]$model$coef[1]+#intercept
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
paramsf<-(pgls_models_list2[e][[1]]$model$coef[1]+pgls_models_list2[e][[1]]$model$coef[3])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
paramsT<-(pgls_models_list2[e][[1]]$model$coef[1]+pgls_models_list2[e][[1]]$model$coef[4])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
p<-ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g., y = earmeasureval, label = Binomial),
factor = as.factor(Category))+
theme_classic()+
theme(legend.position = "none")+
geom_point(aes(color = Category))+
scale_color_manual(values=c("green","blue","darkgrey","l2ghtblue","green","darkgray","darkgreen","corns2lk4","blue"))+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(parampd)), col = "green")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(paramsf)), col = "blue")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(paramsT)), col = "darkgrey")+
scale_x_log10()+
scale_y_log10()+annotation_logticks(sides = "lr")+
geom_text_repel(aes(label = Orderpdonly))+
ylab(yvarnames[e])
ggExtra::ggMarginal(p, type = "boxplot", groupColour = TRUE, margins = "y")#add marginal plot to 'p' object
}
runplot_category_main(1)+annotation_logticks(sides = "lr")
runplot_category_main(10)
View(longdfplotting)
runplot_category_main<-function(e){
parampd<-pgls_models_list2[e][[1]]$model$coef[1]+#intercept
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
paramsf<-(pgls_models_list2[e][[1]]$model$coef[1]+pgls_models_list2[e][[1]]$model$coef[3])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
paramsT<-(pgls_models_list2[e][[1]]$model$coef[1]+pgls_models_list2[e][[1]]$model$coef[4])+
log(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e])$Head.mass..g.)*#heamass times slope
(pgls_models_list2[e][[1]]$model$coef[2])
p<-ggplot(subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g., y = earmeasureval, label = Binomial),
factor = as.factor(Category))+
theme_classic()+
theme(legend.position = "none")+
geom_point(aes(color = Category))+
scale_color_manual(values=c("green","blue","darkgrey","l2ghtblue","green","darkgray","darkgreen","corns2lk4","blue"))+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(parampd)), col = "green")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(paramsf)), col = "blue")+
geom_line(data = subset(longdfplotting,longdfplotting$earmeasures==yvarnames[e]),
aes(x = Head.mass..g.,y = exp(paramsT)), col = "darkgrey")+
scale_x_log10()+
scale_y_log10()+annotation_logticks(sides = "lr")+
geom_text_repel(aes(label = Binomial))+
ylab(yvarnames[e])
ggExtra::ggMarginal(p, type = "boxplot", groupColour = TRUE, margins = "y")#add marginal plot to 'p' object
}
runplot_category_main(1)+annotation_logticks(sides = "lr")
runplot_category_main(10)
exp(-0.63)
library(flextable)
library(officer)
options(scipen=999, digits = 3)# take out of scientific notation and allow 3 significant digist
########################################pgls function####################################
pgls_models<-function(i){
pglsfit<-pgls(as.formula(i), data = birdCDO, #check comparative data object here<---
lambda = 'ML', #find lambda using maximum likelihood
bounds = list(lambda=c(0.0011,1)))#####
}
birdCDO<-comparative.data(phy = birdtreels,data = avgdf[avgdf$Category!="Terrestrial",],
names.col = Binomial,
vcv = TRUE, na.omit = FALSE,
warn.dropped = TRUE)
#check any tips dropped between linking phylogeny and dataframe
birdCDO$dropped
#Remove 'terrestrial' as a level
birdCDO$data$plungedistinct<-droplevels(birdCDO$data$plungedistinct, exclude = "Terrestrial")
levels(birdCDO$data$plungedistinct)
birdCDO$data$plungedistinct<-relevel(birdCDO$data$plungedistinct, ref = "Surface")
#####
source("pgls_HM.R") #
source("pgls_HM_plus_ecol.R") #
source("pgls_HM_times_ecol.R") #
#for aquatic-only analysis, go back and create a new data object lacking Terrestrial species, and also include models with dive score:
source("pgls_HM_plus_divescore.R") #
source("pgls_HM_times_divescore.R") #
grouped_eachmeasure<-list()
for (i in 1:length(tbllist_HM)){
grouped_eachmeasure[[i]]<-rbind(tbllist_HM[[i]],tbllist_HM_plus_ecol[[i]],
tbllist_HM_times_ecol[[i]],
tbllist_HM_plus_divescore[[i]],tbllist_HM_times_divescore[[i]])                   #,
}
add_AIC<-list()
for (i in 1:length(tbllist_HM)){
add_AIC[[i]]<-grouped_eachmeasure[[i]][!duplicated(grouped_eachmeasure[[i]]$Model),c("Model","Adj_Rsquared","Lambda","Fstat","Fstat_numdf","Fstat_dendf",
"AICc")]
add_AIC[[i]]$ChangeAIC<-add_AIC[[i]]$AICc-min(add_AIC[[i]]$AICc)
add_AIC[[i]]$relativelikelihood<-exp(-0.5*add_AIC[[i]]$ChangeAIC)
add_AIC[[i]]$AICweight_calc<-add_AIC[[i]]$relativelikelihood/sum(add_AIC[[i]]$relativelikelihood)
}
#Sort rows by AIC, low to high
add_AIC2<-list()
for (i in 1:length(add_AIC)){
add_AIC2[[i]]<-arrange(add_AIC[[i]],add_AIC[[i]]$AICc)
}
##combine into one dataframe and print
all<-do.call(rbind.data.frame,add_AIC2)
all$Measurementgroup<-""#add extra column for category
all$Measurementgroup<-ifelse(grepl("Columella",all$Model),"Columella size",all$Model)
all$Measurementgroup<-ifelse(grepl("CA",all$Model),"Cochlear aqueduct",all$Measurementgroup)
all$Measurementgroup<-ifelse(grepl(
"area_ratio|Umbo_distancetoTMplane|dis_coltip_TMcentroid|meanTMangle|FPtotalarea|TMtotalarea|RWtotalarea|totalEClength" ,all$Model),
"Impedance matching",all$Measurementgroup)
all$Measurementgroup<-ifelse(grepl("Behind.TM",all$Model),"Airvolume",all$Measurementgroup)
all<-all[,c(ncol(all),(1:(ncol(all)-1)))]
all$Measurementgroup[which(duplicated(all$Measurementgroup))]<-""
all$F_<-paste0(all$Fstat,"(",all$Fstat_numdf,",",all$Fstat_dendf,")")
#visualize the table better using the flextable package
flexall<-flextable(all) %>% add_header_lines(
values = "Table X. Models for selection") %>%
bold(i = ~ ChangeAIC < 0.01) %>% # select columns add: j = ~ Coefficients + P.val
autofit()
flexall
modellist<- paste(pgls_todo_hm,"*plungedistinct")
pgls_models_list<-lapply(modellist,pgls_models)#run pgls
#make list of dataframes with the PGLS outputs.
tbllist_HM_times_divescore<-list()
for (i in seq_along(pgls_models_list)){#change th 'Model' colume in this as appropriate
tbllist_HM_times_divescore[[i]]<-as.data.frame(summary(pgls_models_list[[i]])$'coefficients')
tbllist_HM_times_divescore[[i]]$Adj_Rsquared<-summary(pgls_models_list[[i]])$'adj.r.squared'[1]#rsquared
tbllist_HM_times_divescore[[i]]$Model<-modellist[i]#formula<_____________________CHECK FORMULA LIST HERE is correct
tbllist_HM_times_divescore[[i]]$Lambda<-summary(pgls_models_list[[i]])$'param'[[2]]#lambda
tbllist_HM_times_divescore[[i]]$Fstat<-summary(pgls_models_list[[i]])$fstatistic[1]
tbllist_HM_times_divescore[[i]]$Fstat_numdf<-summary(pgls_models_list[[i]])$fstatistic[2]
tbllist_HM_times_divescore[[i]]$Fstat_dendf<-summary(pgls_models_list[[i]])$fstatistic[3]
tbllist_HM_times_divescore[[i]]$AICc<-pgls_models_list[[i]]$aicc[1]
}
for(i in seq_along(tbllist_HM_times_divescore)){
tbllist_HM_times_divescore[[i]]$Coefficients<-row.names(tbllist_HM_times_divescore[[i]])
tbllist_HM_times_divescore[[i]]$Coefficients<-gsub('[[:digit:]]+', '', tbllist_HM_times_divescore[[i]]$Coefficients)#regex to remove number automatically added during the loop
#identify numeric cols and character cols to apply the significant digits function
character_cols<-unlist(lapply(tbllist_HM_times_divescore[[i]], is.character))
numeric_cols <- unlist(lapply(tbllist_HM_times_divescore[[i]], is.numeric))# Identify numeric columns
tbllist_HM_times_divescore[[i]]<-cbind(tbllist_HM_times_divescore[[i]][,which(character_cols)],signif(tbllist_HM_times_divescore[[i]][,which(numeric_cols)], digits = 2))
#tbllist_HM_times_divescore[[i]] <- tbllist_HM_times_divescore[[i]][, c(6,11,8:10,7,5,1:4)]#change order of columns
#dplyr::select_if(tbllist_HM_times_divescore[[i]], is.numeric)#select only numeric data
colnames(tbllist_HM_times_divescore[[i]])[6]<-"P.val"#rename b/c flextable doesn't work will with the '>' sign
#tbllist_HM_times_divescore[[i]]$Fstat[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Fstat_numdf[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Fstat_dendf[2:nrow(tbllist_HM_times_divescore[[i]])]<-" "
##tbllist_HM_times_divescore[[i]]$Model[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Lambda[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Adj_Rsquared[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$AICc[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
row.names(tbllist_HM_times_divescore[[i]])<-c()#remove row names
print(tbllist_HM_times_divescore[[i]])
}
grouped_eachmeasure<-list()
for (i in 1:length(tbllist_HM)){
grouped_eachmeasure[[i]]<-rbind(tbllist_HM[[i]],tbllist_HM_plus_ecol[[i]],
tbllist_HM_times_ecol[[i]],
tbllist_HM_plus_divescore[[i]],tbllist_HM_times_divescore[[i]])                   #,
}
add_AIC<-list()
for (i in 1:length(tbllist_HM)){
add_AIC[[i]]<-grouped_eachmeasure[[i]][!duplicated(grouped_eachmeasure[[i]]$Model),c("Model","Adj_Rsquared","Lambda","Fstat","Fstat_numdf","Fstat_dendf",
"AICc")]
add_AIC[[i]]$ChangeAIC<-add_AIC[[i]]$AICc-min(add_AIC[[i]]$AICc)
add_AIC[[i]]$relativelikelihood<-exp(-0.5*add_AIC[[i]]$ChangeAIC)
add_AIC[[i]]$AICweight_calc<-add_AIC[[i]]$relativelikelihood/sum(add_AIC[[i]]$relativelikelihood)
}
#Sort rows by AIC, low to high
add_AIC2<-list()
for (i in 1:length(add_AIC)){
add_AIC2[[i]]<-arrange(add_AIC[[i]],add_AIC[[i]]$AICc)
}
##combine into one dataframe and print
all<-do.call(rbind.data.frame,add_AIC2)
all$Measurementgroup<-""#add extra column for category
all$Measurementgroup<-ifelse(grepl("Columella",all$Model),"Columella size",all$Model)
all$Measurementgroup<-ifelse(grepl("CA",all$Model),"Cochlear aqueduct",all$Measurementgroup)
all$Measurementgroup<-ifelse(grepl(
"area_ratio|Umbo_distancetoTMplane|dis_coltip_TMcentroid|meanTMangle|FPtotalarea|TMtotalarea|RWtotalarea|totalEClength" ,all$Model),
"Impedance matching",all$Measurementgroup)
all$Measurementgroup<-ifelse(grepl("Behind.TM",all$Model),"Airvolume",all$Measurementgroup)
all<-all[,c(ncol(all),(1:(ncol(all)-1)))]
all$Measurementgroup[which(duplicated(all$Measurementgroup))]<-""
all$F_<-paste0(all$Fstat,"(",all$Fstat_numdf,",",all$Fstat_dendf,")")
#visualize the table better using the flextable package
flexall<-flextable(all) %>% add_header_lines(
values = "Table X. Models for selection") %>%
bold(i = ~ ChangeAIC < 0.01) %>% # select columns add: j = ~ Coefficients + P.val
autofit()
flexall
grouped_eachmeasure
modellist<- paste(pgls_todo_hm,"*divescore")
pgls_models_list<-lapply(modellist,pgls_models)#run pgls
pgls_models_list
#make list of dataframes with the PGLS outputs.
tbllist_HM_times_divescore<-list()
for (i in seq_along(pgls_models_list)){#change th 'Model' colume in this as appropriate
tbllist_HM_times_divescore[[i]]<-as.data.frame(summary(pgls_models_list[[i]])$'coefficients')
tbllist_HM_times_divescore[[i]]$Adj_Rsquared<-summary(pgls_models_list[[i]])$'adj.r.squared'[1]#rsquared
tbllist_HM_times_divescore[[i]]$Model<-modellist[i]#formula<_____________________CHECK FORMULA LIST HERE is correct
tbllist_HM_times_divescore[[i]]$Lambda<-summary(pgls_models_list[[i]])$'param'[[2]]#lambda
tbllist_HM_times_divescore[[i]]$Fstat<-summary(pgls_models_list[[i]])$fstatistic[1]
tbllist_HM_times_divescore[[i]]$Fstat_numdf<-summary(pgls_models_list[[i]])$fstatistic[2]
tbllist_HM_times_divescore[[i]]$Fstat_dendf<-summary(pgls_models_list[[i]])$fstatistic[3]
tbllist_HM_times_divescore[[i]]$AICc<-pgls_models_list[[i]]$aicc[1]
}
for(i in seq_along(tbllist_HM_times_divescore)){
tbllist_HM_times_divescore[[i]]$Coefficients<-row.names(tbllist_HM_times_divescore[[i]])
tbllist_HM_times_divescore[[i]]$Coefficients<-gsub('[[:digit:]]+', '', tbllist_HM_times_divescore[[i]]$Coefficients)#regex to remove number automatically added during the loop
#identify numeric cols and character cols to apply the significant digits function
character_cols<-unlist(lapply(tbllist_HM_times_divescore[[i]], is.character))
numeric_cols <- unlist(lapply(tbllist_HM_times_divescore[[i]], is.numeric))# Identify numeric columns
tbllist_HM_times_divescore[[i]]<-cbind(tbllist_HM_times_divescore[[i]][,which(character_cols)],signif(tbllist_HM_times_divescore[[i]][,which(numeric_cols)], digits = 2))
#tbllist_HM_times_divescore[[i]] <- tbllist_HM_times_divescore[[i]][, c(6,11,8:10,7,5,1:4)]#change order of columns
#dplyr::select_if(tbllist_HM_times_divescore[[i]], is.numeric)#select only numeric data
colnames(tbllist_HM_times_divescore[[i]])[6]<-"P.val"#rename b/c flextable doesn't work will with the '>' sign
#tbllist_HM_times_divescore[[i]]$Fstat[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Fstat_numdf[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Fstat_dendf[2:nrow(tbllist_HM_times_divescore[[i]])]<-" "
##tbllist_HM_times_divescore[[i]]$Model[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Lambda[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$Adj_Rsquared[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
#tbllist_HM_times_divescore[[i]]$AICc[2:nrow(tbllist_HM_times_divescore[[i]])]<-""
row.names(tbllist_HM_times_divescore[[i]])<-c()#remove row names
print(tbllist_HM_times_divescore[[i]])
}
grouped_eachmeasure<-list()
for (i in 1:length(tbllist_HM)){
grouped_eachmeasure[[i]]<-rbind(tbllist_HM[[i]],tbllist_HM_plus_ecol[[i]],
tbllist_HM_times_ecol[[i]],
tbllist_HM_plus_divescore[[i]],tbllist_HM_times_divescore[[i]])                   #,
}
add_AIC<-list()
for (i in 1:length(tbllist_HM)){
add_AIC[[i]]<-grouped_eachmeasure[[i]][!duplicated(grouped_eachmeasure[[i]]$Model),c("Model","Adj_Rsquared","Lambda","Fstat","Fstat_numdf","Fstat_dendf",
"AICc")]
add_AIC[[i]]$ChangeAIC<-add_AIC[[i]]$AICc-min(add_AIC[[i]]$AICc)
add_AIC[[i]]$relativelikelihood<-exp(-0.5*add_AIC[[i]]$ChangeAIC)
add_AIC[[i]]$AICweight_calc<-add_AIC[[i]]$relativelikelihood/sum(add_AIC[[i]]$relativelikelihood)
}
#Sort rows by AIC, low to high
add_AIC2<-list()
for (i in 1:length(add_AIC)){
add_AIC2[[i]]<-arrange(add_AIC[[i]],add_AIC[[i]]$AICc)
}
##combine into one dataframe and print
all<-do.call(rbind.data.frame,add_AIC2)
all$Measurementgroup<-""#add extra column for category
all$Measurementgroup<-ifelse(grepl("Columella",all$Model),"Columella size",all$Model)
all$Measurementgroup<-ifelse(grepl("CA",all$Model),"Cochlear aqueduct",all$Measurementgroup)
all$Measurementgroup<-ifelse(grepl(
"area_ratio|Umbo_distancetoTMplane|dis_coltip_TMcentroid|meanTMangle|FPtotalarea|TMtotalarea|RWtotalarea|totalEClength" ,all$Model),
"Impedance matching",all$Measurementgroup)
all$Measurementgroup<-ifelse(grepl("Behind.TM",all$Model),"Airvolume",all$Measurementgroup)
all<-all[,c(ncol(all),(1:(ncol(all)-1)))]
all$Measurementgroup[which(duplicated(all$Measurementgroup))]<-""
all$F_<-paste0(all$Fstat,"(",all$Fstat_numdf,",",all$Fstat_dendf,")")
#visualize the table better using the flextable package
flexall<-flextable(all) %>% add_header_lines(
values = "Table X. Models for selection") %>%
bold(i = ~ ChangeAIC < 0.01) %>% # select columns add: j = ~ Coefficients + P.val
autofit()
flexall
#write table to word file
toprint<-read_docx() #create word doc object
body_add_flextable(toprint,flexall)#add pgls output table
body_end_section_landscape(toprint)
#print to file
print(toprint,target = "D:/Analysis_plots/AIC best model Dec 9 no terr.docx")
details<-list()
for (i in 1:length(add_AIC)){
details[[i]]<-arrange(grouped_eachmeasure[[i]],grouped_eachmeasure[[i]]$AICc)#sort table by IA
details[[i]]$ChangeAIC<-details[[i]]$AICc-min(details[[i]]$AICc)#add change in AIC column
details[[i]]<-details[[i]][details[[i]]$ChangeAIC<=3,c("Model","Coefficients","Estimate","Std. Error","P.val","ChangeAIC")]#select only the best model (first one where change = 0)
details[[i]]$Model[2:nrow(details[[i]])]<-""
}
#print
modeldetails<-do.call(rbind.data.frame,details)#combine into one dataframe
modeldetails$Measurementgroup<-""#add extra column for category
modeldetails$Measurementgroup<-ifelse(grepl("Columella",modeldetails$Model),"Columella size",modeldetails$Model)
modeldetails$Measurementgroup<-ifelse(grepl("CA",modeldetails$Model),"Cochlear aqueduct",modeldetails$Measurementgroup)
modeldetails$Measurementgroup<-ifelse(grepl(
"area_ratio|Umbo_distancetoTMplane|dis_coltip_TMcentroid|meanTMangle|FPtotalarea|TMtotalarea|RWtotalarea|totalEClength" ,modeldetails$Model),
"Impedance matching",modeldetails$Measurementgroup)
modeldetails$Measurementgroup<-ifelse(grepl("Behind.TM",modeldetails$Model),"Airvolume",modeldetails$Measurementgroup)
modeldetails<-modeldetails[,c(ncol(modeldetails),(1:(ncol(modeldetails)-1)))]
#visualize the table better using the flextable package
flexall<-flextable(modeldetails) %>% add_header_lines(
values = "Table X. Model details for best model") %>%
bold(i = ~ P.val < 0.05) %>% # select columns add: j = ~ Coefficients + P.val
autofit()
flexall
#print to word file
toprint<-read_docx() #create word doc object
body_add_flextable(toprint,flexall)#add pgls output table
body_end_section_landscape(toprint)
print(toprint,target = "D:/Analysis_plots/AIC Details Dec 9 no terr.docx")
