d$percentexplained<-d$`diag(pPCA$Eval)/sum(pPCA$Eval) * 100`
#eigenvalue plot
p<-ggplot(d, aes(x = reorder(PC1,-percentexplained), y = percentexplained))+
geom_bar(stat = "identity", col = "white")+
theme_minimal()+
xlab("Principal component")+
ylab("Percent variance \n explained")
p
#remove lavels for inset plot
p<-ggplot(d[1:6,], aes(x = reorder(PC1,-percentexplained), y = percentexplained))+
geom_bar(stat = "identity")+
theme_classic()+
xlab("")+
ylab("")+
theme(axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks.y.left =  element_line(color = "black"))
p
p<-ggplot(d[1:6,], aes(x = reorder(PC1,-percentexplained), y = percentexplained))+
geom_bar(stat = "identity")+
theme_classic()+
xlab("")+
ylab("")+
theme(axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks.y.left =  element_line(color = "black"))
p
p<-ggplot(d[1:6,], aes(x = reorder(PC1,-percentexplained), y = percentexplained))+
geom_bar(stat = "identity")+
theme_classic()+
xlab("")+
ylab("")+
theme(axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid = element_blank())
p
library(caper)
library(phytools)
library(ape)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(tidyr)
#set working directory and load data
setwd("E:/ATclone/A_T-stats")
#load main dataframe
df<-read.csv("Eardata.csv", stringsAsFactors = F, header = T) #, stringsAsFactors = FALSE
#####The pgls model function, which will be applied to list of formulas###
pgls_models<-function(i){
pglsfit<-pgls(as.formula(i), data = birdCDO, #check comparative data object here<---
lambda = 'ML', #find lambda using maximum likelihood
bounds = list(lambda=c(0.0001,1)))
}
#note some missing headmass values now imputed
df$Head.mass..g.
#load phylogeny and correct names that were different between birdtree.org
#and the up-to-date species names
source("load phylogeny and make CDO.R")
#add computed head mass from head mass~skullwidth pgls
source("SW_HM_.R")#add phylogeney here
df$Head.mass..g.
library(caper)
library(phytools)
library(ape)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(tidyr)
#set working directory
setwd("E:/ATclone/A_T-stats")
#load main dataframe
df<-read.csv("Eardata.csv", stringsAsFactors = F, header = T) #, stringsAsFactors = FALSE
#####the pgls model function, which will be applied to list of formulas###
pgls_models<-function(i){
pglsfit<-pgls(as.formula(i), data = birdCDO, #check comparative data object here<---
lambda = 'ML', #find lambda using maximum likelihood
bounds = list(lambda=c(0.0001,1)))
}
#note some missing headmass values
df$Head.mass..g.
#load phylogeny and correct names that were different between birdtree.org
#and the up-to-date species names
source("load phylogeny and make CDO.R")
#add computed head mass from head mass~skullwidth pgls
source("SW_HM_.R")#add phylogeney here
df$Head.mass..g.
#since PGLS uses one point per species,
#we create a dataframeaverage values for species with more than one specimen:
#first make a dataframe with only one species per line
distinctdf<-distinct(df, Binomial, .keep_all = TRUE)
distinctdforder<-arrange(distinctdf,Binomial)#sort by species name
#next, get averages for columns with continuous data
avgdf<-df %>% group_by(Binomial) %>% summarise_at(vars(Skull.width..mm.:area_ratio),
mean, na.rm = TRUE)
avgdf<-as.data.frame(avgdf)
#Nnow we add back columns from distinctdf which don't require averaging
avgdf$Species<-distinctdforder$Species
avgdf$Low.Hz<-distinctdforder$Low.Hz
avgdf$Order<-distinctdforder$Order
avgdf$Family<-distinctdforder$Family
avgdf$maxdivedepth<-distinctdforder$max
avgdf$Category<-as.character(distinctdforder$Category)
avgdf$birdtree<-gsub(" ","_",distinctdforder$Birdtree)
avgdf$IAC_detail<-distinctdforder$IAC_detail
avgdf$IBP_detail<-distinctdforder$IBP_detail
avgdf$Behind.TM<-distinctdforder$Behind.TM
avgdf$`fluid.filled.`<-distinctdforder$`fluid.filled.`
#add dive depth data to the main dataframe
#this script groups the 'surface foraging' based on more detailed ecologies
source("add_dive_depth_data.R")
#set 'Terrestrial' as reference level for the ecological grouping variable
avgdf$plungedistinct<-as.character(avgdf$catfeeding2)
avgdf$plungedistinct[which(is.na(avgdf$plungedistinct))]<-"Terrestrial"
avgdf$plungedistinct<-relevel(as.factor(avgdf$plungedistinct), ref = "Terrestrial")
avgdf$plungedistinct[avgdf$Binomial=="Ardea_melanocephala"]<-"Surface"
#make comparative data frame object for the pgls function
birdCDO<-comparative.data(phy = birdtreels,data = avgdf,
names.col = Binomial,
vcv = TRUE, na.omit = FALSE,
warn.dropped = TRUE)
#check any tips dropped between linking phylogeny and dataframe
birdCDO$dropped
#create list of pgls models to run (only models with head mass are used)
pgls_todo_nogeomet <- c("log(TMtotalarea)~log(Skull.width..mm.)",
"log(TMtotalarea)~log(Head.mass..g.)",#
"log(FPtotalarea)~log(Skull.width..mm.)",
"log(FPtotalarea)~log(Head.mass..g.)",#
"log(area_ratio)~log(Skull.width..mm.)",
"log(area_ratio)~log(Head.mass..g.)",
"log(dis_coltip_TMcentroid)~log(Skull.width..mm.)",
"log(dis_coltip_TMcentroid)~log(Head.mass..g.)",
"log(Umbo_distancetoTMplane)~log(Skull.width..mm.)",
"log(Umbo_distancetoTMplane)~log(Head.mass..g.)",
"log(meanTMangle)~log(Skull.width..mm.)",
"log(meanTMangle)~log(Head.mass..g.)",
"log(totalEClength)~log(Skull.width..mm.)",
"log(totalEClength)~log(Head.mass..g.)",
"log(RWtotalarea)~log(Skull.width..mm.)",
"log(RWtotalarea)~log(Head.mass..g.)",
"log(CAtotalarea)~log(Skull.width..mm.)",
"log(CAtotalarea)~log(Head.mass..g.)",
"log(Behind.TM)~log(Skull.width..mm.)",
"log(Behind.TM)~log(Head.mass..g.)",#
"log(Columella.length.mm)~log(Skull.width..mm.)",
"log(Columella.length.mm)~log(Head.mass..g.)",
"log(Columella.volume.mm3)~log(Skull.width..mm.)",
"log(Columella.volume.mm3)~log(Head.mass..g.)")
#select models with head mass
pgls_todo_hm<-pgls_todo_nogeomet[seq(2,length(pgls_todo_nogeomet),2)]
library(ggplot2)
library(RColorBrewer)
library(ggtree)
library(colorspace)
divecol<-c(sequential_hcl(6, palette = "Purple-Blue",rev = T)[2:6])
#count # in each order
orderdf<-avgdf %>% count(Order)
#distinct df
g2<-avgdf[!duplicated(avgdf$Order),]#orders only
g2order<-arrange(g2,Order)#sort to match order df
g2order$n<-orderdf$n#attach number of species in order
str(g2order$Binomial)
#drop timps for order
g2order$full<-paste0(g2order$Order," (",as.character(g2order$n),")")
g2order$Order<-as.character(g2order$Order)
#fig sampling and grouping
mypal <- colorRampPalette(brewer.pal(6, "Blues"))
mypal2 <- colorRampPalette(brewer.pal(6, "YlOrRd"))
#clade labels
A<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Passeriformes"])
B<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Charadriiformes"])
C<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Falconiformes"])
D<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Accipitriformes"])
E<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Bucerotiformes"])
F<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Gruiformes"])
G<--findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Anseriformes"])
H<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Galliformes"])
I<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Pelecaniformes"])
J<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Procellariiformes"])
K<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Sphenisciformes"])
L<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Suliformes"])
M<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Psittaciformes"])
N<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Columbiformes"])
O<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Strigiformes"])
P<-findMRCA(birdtreels,avgdf$Binomial[avgdf$Order=="Anseriformes"])
p<-ggtree(birdtreels, layout = "circular", open.angle = 150) %<+% avgdf + ###########, layout = "circular"
#geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 4) + #circular
#geom_text(aes(label = node))+
#xlim(NA, 150) +
#ylim(NA,140) +
#geom_tippoint(aes(color = Category), size = 5, shape = 15) +
#geom_tippoint(aes(x = x+2.5,color = plungedistinct), size = 5, shape = 15) +
#geom_tippoint(aes(x = x+5, color = as.factor(divescore)), size = 5, shape = 15) +
scale_color_manual(values = c(mypal(5),"black","grey","green","blue"))+
geom_cladelabel(A, "Passeriformes", offset=25, barsize=2, align = T, angle=0,offset.text=15, fontsize=3)+
geom_cladelabel(B, "Charadriiformes", offset=25, barsize=2, align = T, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(C, "Falconiformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(D, "Accipitriformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(E, "Bucerotiformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(F, "Gruiformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(G, "Anseriformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(H, "Galliformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(I, "Pelecaniformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(J, "Procellariiformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(K, "Sphenisciformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(L, "Suliformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(M, "Psittaciformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
#geom_cladelabel(119, "Struthioniformes", offset=0, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(N, "Columbiformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(O, "Strigiformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
geom_cladelabel(P, "Anseriformes", offset=25, barsize=2, angle=0, offset.text=15,   fontsize=3)+
#geom_tiplab2(aes(size = 1, label = Binomialsinge), align = TRUE, geom = "text", angle = 0, offset=15, linetype = "dotted")+
geom_strip("Phaethon_rubricauda", "Phaethon_rubricauda", offset=16, offset.text=15, hjust=0, fontsize=3,
label="Phaethontifomres")+
geom_strip(g2order$Binomial[9], g2order$Binomial[9], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[9])+
geom_strip(g2order$Binomial[20], g2order$Binomial[20], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[20])+
geom_strip(g2order$Binomial[7], g2order$Binomial[7], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[7])+
geom_strip(g2order$Binomial[3], g2order$Binomial[3], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[3])+
geom_strip(g2order$Binomial[15], g2order$Binomial[15], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[15])+
geom_strip(g2order$Binomial[10], g2order$Binomial[10], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[10])+
geom_strip(g2order$Binomial[19], g2order$Binomial[19], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[19])+
geom_strip(g2order$Binomial[25], g2order$Binomial[25], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[25])+
geom_strip(g2order$Binomial[13], g2order$Binomial[13], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[13])+
geom_strip(g2order$Binomial[5], g2order$Binomial[5], offset=16, offset.text=15, hjust=0, fontsize=3,
label=g2order$full[5])
p
rownames(avgdf)<-avgdf$Binomial
# The palette with black:
cbbPalette <- c(	"#FFFFFF","#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
BLUE<-c("#d0d1e6",
"#a6bddb",
"#74a9cf",
"#2b8cbe",
"#045a8d")
#add heatmap
k<-gheatmap(p,avgdf[,c("plungedistinct","divescore")], #"Category",
width = 0.25, offset = 0,
color = "black",
#colnames = FALSE,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 0)+
scale_fill_manual(values = c(divecol,"#000000", "#E69F00","#FFFFFF", "#56B4E9"), na.value = "#FFFFFF")
k
#open up the circle
l<-open_tree(k,30)
l
avgdf$Binomial2<-avgdf$Binomial
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 300) +
ylim(NA,140)
a
avgdf$IACN<-ifelse(avgdf$IAC_detail=="",0,1)
avgdf$IBPN<-ifelse(avgdf$IBP_detail=="",0,1)
names(avgdf)
sampled<-avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"  )]/avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"   )]
colnames(sampled)
colnames(sampled)<-seq(1:length(colnames(sampled)))
#current sampling
k2<-gheatmap(a,sampled,
width = 0.4, offset = 0,
color = "black",
low = "white",  high = "blue",
colnames = T,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 5)
k2
ggtree()
?ggheatmap
?gheatmap/
?gheatmap
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 300) +
ylim(NA,140)
a
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 200) +
ylim(NA,140)
a
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 100) +
ylim(NA,140)
a
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 500) +
ylim(NA,140)
a
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 150) +
ylim(NA,140)
a
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 160) +
ylim(NA,140)
a
avgdf$IACN<-ifelse(avgdf$IAC_detail=="",0,1)
avgdf$IBPN<-ifelse(avgdf$IBP_detail=="",0,1)
names(avgdf)
sampled<-avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"  )]/avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"   )]
colnames(sampled)
colnames(sampled)<-seq(1:length(colnames(sampled)))
#current sampling
k2<-gheatmap(a,sampled,
width = 0.4, offset = 0,
color = "black",
low = "white",  high = "blue",
colnames = T,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 5)
k2
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 160) +
ylim(NA,140)
a
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 160) +
ylim(NA,120)
a
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 160) +
ylim(NA,130)
a
avgdf$IACN<-ifelse(avgdf$IAC_detail=="",0,1)
avgdf$IBPN<-ifelse(avgdf$IBP_detail=="",0,1)
names(avgdf)
sampled<-avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"  )]/avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"   )]
colnames(sampled)
colnames(sampled)<-seq(1:length(colnames(sampled)))
#current sampling
k2<-gheatmap(a,sampled,
width = 0.4, offset = 0,
color = "black",
low = "white",  high = "blue",
colnames = T,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 5)
k2
a<-ggtree(birdtreels) %<+% avgdf + ###########, layout = "circular"
geom_tiplab(aes(label = Binomial2), linesize = 0.1, offset = 30) + #circular
#geom_text(aes(label = node))+
xlim(NA, 160) +
ylim(NA,135)
a
avgdf$IACN<-ifelse(avgdf$IAC_detail=="",0,1)
avgdf$IBPN<-ifelse(avgdf$IBP_detail=="",0,1)
names(avgdf)
sampled<-avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"  )]/avgdf[,c("Head.mass..g.",
"TMtotalarea"  ,
"FPtotalarea"  ,
"dis_coltip_TMcentroid",
"meanTMangle"  ,
"Umbo_distancetoTMplane",
"CAtotalarea"  ,
"RWtotalarea"  ,
"totalEClength",
"Columella.length.mm"   ,
"Columella.volume.mm3" ,
"Behind.TM"  ,
"IACN","IBPN"   )]
colnames(sampled)
colnames(sampled)<-seq(1:length(colnames(sampled)))
#current sampling
k2<-gheatmap(a,sampled,
width = 0.4, offset = 0,
color = "black",
low = "white",  high = "blue",
colnames = T,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 5)
k2
library(ggplot2)
theme_set(theme_classic())
arearatio<-read.csv(file.choose())
names(arearatio)
ddprocell<-subset(divedepth, order =='Procellariformes')
petrels<-subset(ddprocell, family=='Procellariidae')
arearatio$fullname<- paste(arearatio$Bird.group, arearatio$Source, sep = " - ")
# Plot
g<- ggplot(arearatio, aes(x = Bird.group, y = Area.ratio, fill = Bird.group))+
geom_boxplot(aes(Bird.group, Area.ratio)) +
theme(axis.text.x=element_text(angle = 30, hjust = 1),
legend.position = "none")+
#      axis.title=element_text(size=14,face="bold"))+
scale_fill_manual(values = c("lightblue","lightblue","lightgreen","lightgreen","lightgreen")) +
geom_point(aes(Bird.group))
g
